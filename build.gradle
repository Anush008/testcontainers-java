buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        // https://github.com/melix/japicmp-gradle-plugin/issues/36
        classpath 'com.google.guava:guava:32.1.2-jre'
        classpath 'com.github.tjni.captainhook:captain-hook:0.1.5'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'testcontainers.java-conventions'
}

apply from: "$rootDir/gradle/ci-support.gradle"
apply plugin: 'com.github.tjni.captainhook'

captainHook {
    autoApplyGitHooks = Boolean.valueOf(System.getenv("AUTO_APPLY_GIT_HOOKS"))
    preCommit = './gradlew spotlessApply'
}

subprojects {
    apply plugin: 'java-library'
    apply from: "$rootDir/gradle/shading.gradle"

    group = "org.testcontainers"

    repositories {
        mavenCentral()
    }

    configurations {
        provided
        api.extendsFrom(provided)
    }

    def postCheckCommand = properties["postCheckCommand"]
    if (postCheckCommand) {
        check.finalizedBy(tasks.create("postCheckExec", Exec) {
            if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
                commandLine('cmd', '/c', postCheckCommand)
            } else {
                commandLine('sh', '-c', postCheckCommand)
            }
        })
    }

    dependencies {
        testImplementation 'ch.qos.logback:logback-classic:1.3.11'
    }
}
